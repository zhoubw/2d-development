#include <SFML/Graphics.hpp>
#include <SFML/System/Clock.hpp>
#include "Mirror.hpp"
#include <iostream>
#include <sstream>
#include <math.h>

Mirror::Mirror(Player p){
  this->x = p.x;
  this->y = p.y - p.height;
  this->width = 30;
  this->height = 10;
  this->heading = 90;

  texture.loadFromFile("testMirror.png");
  sprite.setTexture(texture);
  sprite.setPosition(x, y);
  sprite.setOrigin(this->width/2, this->height/2);
}

void Mirror::step(Player p, int mouseX, int mouseY) {
  //points mirror towards mouse
  heading = int( ( atan2( p.y-mouseY,mouseX-p.x ) * 180 ) / 3.14159);
  if (heading < 0) heading += 360;
  sprite.setRotation( heading * -1 + 90);
  //std::cout << heading << std::endl;
  //std::cout << "( " << x << "," << y << " )" << std::endl;
  //orbits around player
  x = p.x + 48*cos(heading * 3.14159 / 180);
  y = p.y - 48*sin(heading * 3.14159 / 180); //needs negative

  sprite.setPosition(x,y);

}
